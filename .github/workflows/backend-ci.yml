name: backend-ci

on:
  push:
    branches: ["master"]
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./**/package-lock.json"

      - name: Install backend dependencies
        run: cd backend; npm ci

      - name: Build backend
        run: cd backend; npm run build --if-present

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./backend/package-lock.json"

      - name: Install backend dependencies
        run: cd backend; npm ci

      - name: Run tests
        run: cd backend; node ace test
        env:
          HOST: 0.0.0.0
          PORT: 3333
          APP_KEY: ${{github.sha}}
          DRIVE_DISK: local
          NODE_ENV: production
          ADMIN_USER_SEED_PASSWORD: mufasa
          FRONTEND_URL: http://locahost:3333
          SESSION_DRIVER: cookie
          DB_CONNECTION: pg
          PG_HOST: localhost
          PG_PORT: 5432
          PG_USER: postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_CONNECTION: local
          GOOGLE_CLIENT_ID: clientId
          GOOGLE_CLIENT_SECRET: clientSecret
          GOOGLE_IOS_CLIENT_ID: IOSClientId
          GOOGLE_IOS_CLIENT_SECRET: IOSSecret
          GOOGLE_CALLBACK_URL: http://localhost:3333/auth/google/callback
          GOOGLE_IOS_CALLBACK_URL: http://localhost:3333/auth/googleios/callback
          GOOGLE_FRONTEND_CALLBACK_URL: http://localhost:3000/auth/google/callback
          GOOGLE_IOS_FRONTEND_CALLBACK_URL: mufasa://authorization
          PUBLIC_URL: http://localhost:3333
          TELEGRAM_FIPAV_BOT_TOKEN: FIPAVBotToken

  docker:
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: cr.likablehair.it
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Docker meta backend
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            cr.likablehair.it/mufasa_backend
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          file: backend/Dockerfile
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
